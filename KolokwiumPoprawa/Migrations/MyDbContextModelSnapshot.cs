// <auto-generated />
using System;
using KolokwiumPoprawa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KolokwiumPoprawa.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KolokwiumPoprawa.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Models.Loan", b =>
                {
                    b.Property<int>("Book_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Book_ID", "User_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Models.UserBookFavorite", b =>
                {
                    b.Property<int>("Book_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Book_ID", "User_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("UserBookFavorite");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Models.Loan", b =>
                {
                    b.HasOne("KolokwiumPoprawa.Models.Book", "Book")
                        .WithMany("Loans")
                        .HasForeignKey("Book_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KolokwiumPoprawa.Models.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Models.UserBookFavorite", b =>
                {
                    b.HasOne("KolokwiumPoprawa.Models.Book", "Book")
                        .WithMany("UserBookFavorites")
                        .HasForeignKey("Book_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KolokwiumPoprawa.Models.User", "User")
                        .WithMany("UserBookFavorites")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Models.Book", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("UserBookFavorites");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Models.User", b =>
                {
                    b.Navigation("Loans");

                    b.Navigation("UserBookFavorites");
                });
#pragma warning restore 612, 618
        }
    }
}
